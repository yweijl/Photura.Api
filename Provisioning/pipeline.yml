trigger:
  branches:
    include:
      - "*"

pool: Default

variables:
  - group: PipeLib
  - template: vars.yml
  - name: isMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

stages:
  - stage: "Build"
    displayName: "Build"
    jobs:
      - job: "Build"
        displayName: "Build"

        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: "build"
              projects: "**/*.csproj"
              arguments: "--configuration Release"
          - task: DotNetCoreCLI@2
            inputs:
              command: "publish"
              publishWebProjects: true
              arguments: "--configuration Release --output $(Build.ArtifactStagingDirectory)/publish"
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/publish"
              artifact: "Drop"
              publishLocation: "pipeline"

  - stage: "Dev"
    displayName: "Deploy Dev"
    dependsOn: Build
    condition: succeeded()
    variables:
      - name: templateFile
        value: "Provisioning/Bicep/main.bicep"
      - name: paramFile
        value: Provisioning/Bicep/parameters.bicepparam

    jobs:
      - job: "Provisioning"
        displayName: "Provision"

        steps:
          - task: AzureCLI@2
            name: "Bicep"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              useGlobalConfig: true
              inlineScript: |
                az --version
                az group create --name ${{variables.name}}-rg --location $(location)
                appName=$(az stack group create \
                  --name ${{variables.name}}-stack \
                  --resource-group ${{variables.name}}-rg \
                  --template-file $(templateFile) \
                  --parameters $(paramFile) \
                  --deny-settings-mode none \
                  --delete-resources \
                  --delete-resource-groups \
                  --query 'outputs.appName' \
                  --output json | jq -r '.value' )
                echo "##vso[task.setvariable variable=appName;isOutput=true]$appName"

      - deployment: Deploy
        dependsOn: Provisioning
        condition: succeeded()
        environment: Dev
        variables:
          appName: $[ dependencies.Provisioning.outputs['Bicep.appName'] ]
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - task: AzureWebApp@1
                  displayName: "Deploy app to App service"
                  inputs:
                    azureSubscription: $(azureServiceConnection)
                    appType: "webAppLinux"
                    appName: $(appName)
                    package: "$(Pipeline.Workspace)/drop/Api.zip"
